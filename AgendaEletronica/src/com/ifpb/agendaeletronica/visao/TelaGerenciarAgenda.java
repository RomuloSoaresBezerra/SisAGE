/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ifpb.agendaeletronica.visao;

import com.ifpb.agendaeletronica.controle.AgendaDaoBanco;
import com.ifpb.agendaeletronica.controle.AgendaDaoBinario;
import com.ifpb.agendaeletronica.controle.CompromissoDaoBanco;
import com.ifpb.agendaeletronica.controle.CompromissoDaoBinario;
import com.ifpb.agendaeletronica.modelo.Agenda;
import com.ifpb.agendaeletronica.modelo.Compromisso;
import com.ifpb.agendaeletronica.excecoes.NomeInvalidoException;
import com.ifpb.agendaeletronica.interfaces.AgendaDao;
import com.ifpb.agendaeletronica.interfaces.CompromissoDao;
import java.io.IOException;
import java.sql.SQLException;
;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author romulo
 */


public class TelaGerenciarAgenda extends javax.swing.JFrame {

    /**
     * Creates new form TelaGerenciarAgenda
     */
    private AgendaDao dao;
    private CompromissoDao dao2;

    public TelaGerenciarAgenda() {

        dao = new AgendaDaoBanco();
        dao2 = new CompromissoDaoBanco();
        initComponents();
        inicializarComponentes();
    }

    public void inicializarComponentes() {
        List<Agenda> agendas;
        String t[] = {"Nome"};
        String m[][] = new String[0][1];
        DefaultTableModel modelo2 = new DefaultTableModel(m, t);
        tabelaAgenda.setModel(modelo2);
        try {
            agendas = dao.listarAgendasUsuario();

            String[] titulos = {"Nome"};
            String[][] tabela = new String[agendas.size()][1];

            for (int i = 0; i < agendas.size(); i++) {
                tabela[i][0] = agendas.get(i).getNomeAgenda();
            }

            DefaultTableModel modelo = new DefaultTableModel(tabela, titulos);
            tabelaAgenda.setModel(modelo);

        } catch (ClassNotFoundException | IOException ex) {
            JOptionPane.showMessageDialog(null, "Falha na conexão");
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Sem compromissos");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    "já existe uma agenda com esse nome",
                    "Mensagem de Erro",
                    JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAgenda = new javax.swing.JTable();
        botaoAtualizarAgenda = new javax.swing.JButton();
        botaoExcluirAgenda = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Gerenciar Agendas");

        tabelaAgenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAgenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAgendaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaAgenda);

        botaoAtualizarAgenda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botaoAtualizarAgenda.setText("Atualizar");
        botaoAtualizarAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarAgendaActionPerformed(evt);
            }
        });

        botaoExcluirAgenda.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        botaoExcluirAgenda.setText("Excluir");
        botaoExcluirAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirAgendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botaoAtualizarAgenda)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                        .addComponent(botaoExcluirAgenda))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botaoAtualizarAgenda, botaoExcluirAgenda});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAtualizarAgenda)
                    .addComponent(botaoExcluirAgenda))
                .addGap(36, 36, 36))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botaoAtualizarAgenda, botaoExcluirAgenda});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAtualizarAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarAgendaActionPerformed
        if (tabelaAgenda.getSelectedRow() != -1) {
            try {

                CompromissoDaoBanco cdb = new CompromissoDaoBanco();

                List<String> agendas = dao.retornaNomeAgendas();
                boolean atualiza = true;
                Agenda a = dao.readAgenda(agendas.get(tabelaAgenda.getSelectedRow()));
                String novoNome = JOptionPane.showInputDialog(null, "Digite o novo nome: ");
                if (novoNome.isEmpty()) {
                    for (int i = 0; i < agendas.size(); i++) {
                        if ((agendas.get(i).equals(novoNome))) {
                            atualiza = false;
                        }
                    }
                }
                if (!atualiza) {
                    JOptionPane.showMessageDialog(null, "Já existe uma agenda com esse nome");
                } else {
                    List<Compromisso> comp = cdb.listarCompromissos();
                    for (int i = 0; i < comp.size(); i++) {
                        if (comp.get(i).getNome().equals(a.getNomeAgenda())) {
                            Compromisso c = new Compromisso();
                            c.setData(comp.get(i).getData());
                            c.setDescricao(comp.get(i).getDescricao());
                            c.setEmail(comp.get(i).getEmail());
                            c.setHora(comp.get(i).getHora());
                            c.setLocal(comp.get(i).getLocal());
                            c.setNome(novoNome);
                            cdb.updateCompromisso(c);
                        }
                    }
                    dao.AualizarNomeAgenda(a, novoNome);
                    JOptionPane.showMessageDialog(null, "Atualizado com Sucesso");
                }

            } catch (ClassNotFoundException | IOException ex) {
                JOptionPane.showMessageDialog(null, "Falha na conexão");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,
                        "já exite uma agenda com esse nome",
                        "Mensagem de Erro",
                        JOptionPane.ERROR_MESSAGE);
            } catch (NomeInvalidoException ex) {
                JOptionPane.showMessageDialog(null,
                        "Nome não pode ser vazio",
                        "Mensagem de Erro",
                        JOptionPane.ERROR_MESSAGE);
            } catch (NullPointerException ex) {

            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhuma agenda selecionada");
        }
        inicializarComponentes();
        TelaInicial.inicializarComponentes();
    }//GEN-LAST:event_botaoAtualizarAgendaActionPerformed

    private void tabelaAgendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAgendaMouseClicked

    }//GEN-LAST:event_tabelaAgendaMouseClicked

    private void botaoExcluirAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirAgendaActionPerformed
        if (tabelaAgenda.getSelectedRow() != -1) {
            try {
                Agenda a = new Agenda();
                List<String> agendas = dao.retornaNomeAgendas();
                if (!agendas.isEmpty()) {
                    a = dao.readAgenda(agendas.get(tabelaAgenda.getSelectedRow()));
                }

                List<Compromisso> compromissos = dao2.listarCompromissos();
                for (int i = 0; i < compromissos.size(); i++) {
                    if (compromissos.get(i).getNome().equals(agendas.get(tabelaAgenda.getSelectedRow())) && compromissos.get(i).getEmail().equals(TelaInicial.usuarioLogado.getEmail())) {
                        System.out.println(dao2.deleteCompromisso(compromissos.get(i)));
                    }
                }
                dao.deleteAgenda(a.getNomeAgenda());

                JOptionPane.showMessageDialog(null, "Excluido com Sucesso");
            } catch (ClassNotFoundException | IOException ex) {
                JOptionPane.showMessageDialog(null, "Falha na conexão");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,
                        "já exite uma agenda com esse nome",
                        "Mensagem de Erro",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhuma agenda selecionada");
        }

        inicializarComponentes();
        TelaInicial.inicializarComponentes();
    }//GEN-LAST:event_botaoExcluirAgendaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaGerenciarAgenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaGerenciarAgenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAtualizarAgenda;
    private javax.swing.JButton botaoExcluirAgenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tabelaAgenda;
    // End of variables declaration//GEN-END:variables
}
